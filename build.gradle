plugins {
    id 'java'
    id 'application'
    id 'jacoco'
    id 'org.openjfx.javafxplugin' version "$javaFxPluginVersion"
    id 'com.github.johnrengelman.shadow' version "$shadowPluginVersion"
    id 'org.fulib.fulibGradle' version '0.5.0'
}

group projectGroup
version projectVersion
mainClassName = 'de.uniks.stp24.Main'

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'org.jetbrains', name: 'annotations', version: jetbrainsAnnotationsVersion

    // Frameworks

    implementation group: "org.fulib", name: "fulibFx", version: fulibFxVersion
    annotationProcessor group: "org.fulib", name: "fulibFx-processor", version: fulibFxVersion
    implementation group: "com.google.dagger", name: "dagger", version: daggerVersion
    annotationProcessor group: "com.google.dagger", name: "dagger-compiler", version: daggerVersion

    // JavaFX

    implementation group: "fr.brouillard.oss", name: "cssfx", version: cssFxVersion

    // REST

    implementation group: "com.squareup.retrofit2", name: "retrofit", version: retrofitVersion
    implementation group: "com.squareup.retrofit2", name: "adapter-rxjava3", version: retrofitVersion
    implementation group: "com.squareup.retrofit2", name: "converter-jackson", version: retrofitVersion

    implementation group: "com.fasterxml.jackson.core", name: "jackson-core", version: jacksonVersion
    implementation group: "com.fasterxml.jackson.datatype", name: "jackson-datatype-jsr310", version: jacksonVersion

    implementation group: "io.reactivex.rxjava3", name: "rxjava", version: rxJavaVersion
    implementation group: "com.fasterxml.jackson.datatype", name: "jackson-datatype-jsr310", version: jacksonVersion

    // WebSocket

    implementation group: "jakarta.websocket", name: "jakarta.websocket-api", version: jakartaWebSocketVersion
    implementation group: "org.glassfish.tyrus.bundles", name: "tyrus-standalone-client", version: tyrusVersion
    implementation group: "org.glassfish.tyrus", name: "tyrus-client", version: tyrusVersion
    implementation group: "org.glassfish.tyrus", name: "tyrus-container-grizzly-client", version: tyrusVersion

    // Testing

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: junitJupiterVersion
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junitJupiterVersion

    testImplementation group: 'org.testfx', name: 'testfx-junit5', version: testFxVersion
    testImplementation group: 'org.testfx', name: 'openjfx-monocle', version: monocleVersion
    testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: mockitoVersion
    testImplementation group: 'org.hamcrest', name: 'hamcrest', version: hamcrestVersion

    testAnnotationProcessor group: 'com.google.dagger', name: 'dagger-compiler', version: daggerVersion
    testImplementation 'org.powermock:powermock-api-mockito2:2.0.9'

    // https://mvnrepository.com/artifact/org.fulib/fulibScenarios
    fulibScenarios group: 'org.fulib', name: 'fulibScenarios', version: '1.7.0'
}

java {
    sourceCompatibility = getVersionForMajor(javaSourceVersion)
    targetCompatibility = getVersionForMajor(javaTargetVersion)
}

static JavaVersion getVersionForMajor(String version) {
    return JavaVersion.values().find { (it.majorVersion == version) }
}

compileJava {
    options.encoding = "UTF-8"
    options.sourcepath = sourceSets.main.resources.getSourceDirectories()
}

javafx {
    version = javaFxVersion
    modules = ['javafx.controls', 'javafx.graphics', 'javafx.fxml', 'javafx.media']
}

jacoco {
    toolVersion = jacocoVersion
}

jacocoTestReport {
    reports.xml.required = true
}

test {
    useJUnitPlatform()

    testLogging {
        exceptionFormat = 'full'
        showStackTraces = true
    }
    if (hasProperty('headless') || System.getenv('CI')) {
        systemProperties = [
                'java.awt.headless': 'true',
                'testfx.robot'     : 'glass',
                'testfx.headless'  : 'true',
                'glass.platform'   : 'Monocle',
                'monocle.platform' : 'Headless',
                'prism.order'      : 'sw',
                'prism.text'       : 't2k',
                'music.disabled'   : 'true'
        ]
    }
}
